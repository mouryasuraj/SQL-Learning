MySQL is a very popular open source Relational Database Management System.

What is RDBMS(Relational Database Management System):
        1.It's a type of database management system that stores data in a structured format, using rows and colums in tables to represent and organize information.
        2.The relational model is based on mathematical set theory and is widely used to managing structured data.
        3.Key features of RDBMS:
            a.Tables:
                i.Data is organized into tables, where each table consist rows and columns.
                ii.Each row represent a record and each column represent a specific attribute or field
            b.Relationships:
                i.RDBMS allows the establishment of Relationships between tables.
                ii.This is done through keys, where one table can reference another using primary and foreign keys.
                iii.This ensures data integrity and consistency.
            c.Constraints:
                i.RDBMS supports to used constraints to define rule for the data of tables.
                ii.Some of the common constraints like "Primary", "foreign", "check", "unique".
            d.ACID properties:
                i.RDBMS adheres to ACID properties.
                ii.ACID stands for Automicity, Consistency, Isolation, Durability
                iii.Explore ACID:
                        a.Automicity:Ensures that a transaction is treated as a single, indivisible unit of work,
                        b.Consistency: Gurantees that database is in a consistent state before or after the transaction.
                        c.Isolation: Ensures that transaction is executed in isolation from each other.
                        d.Durablility:Gurantees that once a transaction is committed, its affects permanent
           e.SQL(Structured Query Language):
                1.RDBMS uses SQL for defininig and manipulating data.
                ii.SQL provide standardized way to interact with database, allowing users to perform updating, querying and managing the database schema. 

What is MYSQl:
        1.MySQL is a Relational Database Management System(RDMS)
        2.MySQL is a open source
        3.MySQL is Free
        4.MySQL is compliant with the ANSI-SQL standard
        5.MySQL is very fast, reliable, scalable, and easy to use.
        6.MySQL is cross platform.
        7.MySQL is ideal for both small and large applications.
        8.MySQL was first released in 1995.
        9.MySQL is developed, distributed and supported by oracle corporation
        10.MySQL is named after co-founder Monty Widenius's daughter: My

Who uses MySQL:
        1.Huge websites like facebook, airbnb, twitter, github, Uber, Youtube,etc
        2.A very large number of web developers around the world.

To show data on your website you will need:
        1.An RDMS program like MYSQL
        2.A server side scripting language like PHP, node.js
        3.To use SQL to get the data you want



----------------Select statement------------------


1.select:
        1.select statement is used to extract data from a database.
        2.syntax:
                --> select column1, column2,...
                    from table_name;
        3.Suppose our table name is Customer and we have to extract the data of customerID column then query will be:
                --> select customerID from Customer;
        4.If we want to select all column from the table then use this syntax:
                --> select * from Customer;
        5.Example: SELECT CustomerName, City, Country FROM Customers;
2.select distinct:
        1.select distinct is used to return only distinct(different) values.
        2.Inside a table, a column containes duplicate values and sometimes you only want to list the different (distinct) values
        3.syntax:
                --> select distinct column1 column2
                    from table_name;
        4.Example: --> select distinct Country from Customer; (Name of the country can be same).
3.count: 
        1.It counts and return the number of values.
        2.Example: --> select count(distinct Country) from Customer;   (It counts and return the number of different values)
                        output: 21


----------------Where clause------------------
1.where:
        1.Where clause is used to filer data.
        2.It is used to extract only those data that fulfill a specified condition.
        3.The where clause is not only used in select statement, it is also used in update, delete, etc.
        4.syntax:
                select column1, column2
                from table_name
                where condition;
        5.Example: select * from Customer where Country = 'Mexico'; (it will show all the data of colum that fulfill a condition, means those have city "mexico")
        6.SQL require single quote around text values and numeric should not be enclosed in quotes:
        7.Example: select * from Customer where customerID = 1;
2.operators in the where clause:
        --> =, >, <, >=, <=, <>(not equal to. In some versions of sql it wil be written as !=), BETWEEN(between a certain range),
        LIKE(search for pattern), IN(To specify multiple possible values for a column).

        
----------------AND, OR, and NOT operators------------------
1.The where clause can be combined with AND, OR, and NOT operators.
2.The And and OR is used to filter records beased on more than one condition.
        a.The AND operator displays a record if all the conditions separated by AND are true.
        b.The OR operator displays a record if any of the conditions separated by OR are true.
3.The NOT operator displays a record if the condition is not true.
4.Syntax:
        AND sysntax: 
                --> select column1, column2 from table_name where condition1 AND condition2 AND condition3...;
        OR syntax:
                --> select column1, column2 from table_name where condition1 OR condition2 OR condition3...;
        NOT syntax:
                --> select column1, column2 from table_name where NOT condition;
5.Example:
        AND: 
                --> select * from Customer where Country = "Germany" AND city = "Berlin";
        OR:
                --> select * from Customer where city = "Berlin" AND city = "Mannheim";
        NOT:
                --> select * from Customer where NOT Country = "Germanmy";
        Combining(AND,OR, and NOT):
                --> select * from Customer where Country = "Germanmy" AND (City = "Berlin" OR City = "");
                --> select * from Customer where NOT Country = "Germanmy" AND NOT Country = "USA";


----------------Order By------------------
1.The order keyword is used to sort the result-set in ascending or descending order.
2.The order keyword sort the result in ascending order by default. If you want to sort in descending order, use the DESC keyword.
3.syntax:
        --> select column1, column2 from table_name ORDER BY colum1, column2,... ASC | DESC
4.Example:
        --> select * from Customer ORDER BY Country;
        --> select * from Customer ORDER BY Country DESC;
        --> select * from Customer ORDER BY Country, CustomerName; (The following SQL statement selects all customers from the "Customers" table, sorted by the "Country" and the "CustomerName" column. This means that it orders by Country, but if some rows have the same Country, it orders them by CustomerName:
        --> select * from Customer ORDER BY Country ASC, CustomerName DESC; 
Example)



----------------Insert Into------------------
1.This statement is used to insert new records in a table.
2.Two ways to insert:
        1.Specify both column names and values:
        Syntax:
                 --> INSERT INTO table_name(colum1, column2, column3,...) values (value1, value2,....);
        2.If you are adding values for all the columns, you do not need to specify the column names in the SQL query. However make sure the order of the values is in the same order as the columns in the table.
        Syntax:
                ---> INSERT INTO table_name values(value1, value2,...);

        Example: INSERT INTO Customers (CustomerName, ContactName, Address, City, PostalCode, Country)
                 VALUES ('Cardinal', 'Tom B. Erichsen', 'Skagen 21', 'Stavanger', '4006', 'Norway');   (In this Example, customerId is autogenrated due to auto increment field)


----------------Null values------------------
1.A field with null value is a field with no value.
2.A null value is different from zero or field that contains spaces. A field with null values is one that had been left blank during record creation
3. We will have to use "IS NULL" and "IS NOT NULL" operator to test the values of null
4.IS NULL:
        a.IS NULL operator is used to test for empty values
        b.syntax:
                --> select column1, column2 from table_name where column IS NULL
5.IS NOT NULL:
        a.IS NOT NULL operator is used to test for non-empty values.    
        b.syntax:
                --> select column1, column2 from table_name where column IS NOT NULL
6.Example:
        --> select * from data where age IS NOT NULL and email IS NOT NULL;


----------------Update statement------------------

1.This statement is used to update the existing record in the table.
2.syntax:
        --> UPDATE table_name SET column1 = val, column2 = val where condition;
        --> UPDATE data SET Age = 12, email = "xyz@gmail.com" where ID = 1;   //We can update multiple columns at the same time.
3.Notice: The where clause in update statement. It specific which record should be updated. If you omit the where clause then it will update all records in the table.
4.Warning: 
        --> update table_name SET column = value;
        --> In the above query, where clause is missing, it means that all the record will update of selected columm.


----------------delete statement------------------
1.This statement is used to delete the existing record in the table.
2.sysntax: 
        --> DELETE FROM table_name where condition.
        --> DELETE from data where name = "Suraj";
3.Notice: The where clause in delete statement. It specific which record should be delete. If you omit the where clause then it will delete all the records in the table.
4.If you want to delete all rows then don't specify where clause:
        --> DELETE from data;


----------------LIMIT clause------------------
1.Limit clause is used to return the specific number of records.
2.This clause is usefull on large tables with thousands of records. Returning a large number of records can impact performance.
3.syntax: 
        --> select * from data Limit 4;
4.If we want to return in between like from id number 4 to 10(inclusive) then use OFFSET
        --> select * from data Limit 7 OFFSET 3;
        --> also select * from data limit 7 OFFSET 3 where country = "germany";
        --> select * from data where age = 29 limit 2;
        
----------------MIN() and MAX() function------------------
1.MIN:
        a.syntax: 
                --> select MIN(column1) from table_name where condition;
        b.MIN function is used to return the smallest value of the selected column.
        c. --> select MIN(price) as SmallestPrice from data(table_name)
2.MAX:
        a.syntax: 
                --> select MAX(column1) from table_name where condition;
        b.MAX function is used to return the highest value of the selected column.
        c. --> select MAX(price) as highestPrice from data(table_name)

3.AS:   AS keyword is used to rename the column and table name.



----------------COUNT, AVG, SUM functions------------------
1.Count:
        a.This function returns the number of rows that matches a specified condition.
        b.Note: NUll values are not counted.
        b.syntax:       --> select COUNT(*) from data where age = 25;
2.AVG:
        a.It returns the average value of a numeric column
        b.Note: NUll values are not ignored.
        c.syntax:       --> select AVG(column1) from data where condition;
3.SUM:
        a.It returns the sum of a numeric column
        b.Note: NUll values are not ignored.
        c.syntax:       --> select SUM(column) from data where condition;


----------------Like operator------------------
1.Like operator is used in a where clause to search for a specific pattern in column.
2.There are two wildcards often used in conjunction with like operator:
        1.The percent sign(%) represent zero, one, or multiple character.
        2.The underscore represents one, single character.
3.These wildcards also used in combinations.
4.We can also combine any number using AND or OR operator.
5.syntax:
        --> select column1 ,column2 from data where condition LIKE pattern;
6.     
         LIKE Operator	                             Description
WHERE CustomerName LIKE 'a%'	        Finds any values that start with "a"
WHERE CustomerName LIKE '%a'	        Finds any values that end with "a"
WHERE CustomerName LIKE '%or%'	        Finds any values that have "or" in any position
WHERE CustomerName LIKE '_r%'	        Finds any values that have "r" in the second position
WHERE CustomerName LIKE 'a_%'	        Finds any values that start with "a" and are at least 2 characters in length
WHERE CustomerName LIKE 'a__%'	        Finds any values that start with "a" and are at least 3 characters in length
WHERE ContactName LIKE 'a%o'	        Finds any values that start with "a" and ends with "o"
7. where ContactName NOT LIKE 'a%'
        







Question for interview:
        1.What is SQL?
        2.How to use SQL?
        3.What is select statemet?
        4.What is where clause?


Some of the most important SQL command:
        1.select: Extract data from a database.
        2.update: updates data in a database.
        3.delete: deletes data from a database.
        4.insert into: inserts new data into a database.
        5.create database: creates a new database.
        6.alter databse: modifies a database.
        7.create table: creates a new table.
        8.alter table: modifies a database.
        9.drop table: deletes a database.
        10.create index: creates an index(search key)
        11.drop index: deletes a index


Note:
        1.SQL is not case-sensitive, select is the same as SELECT.
        2.Semicolon after statemnt, it separate each sql statement in database system that allows us to execute more than one sql statement in the same call to the server.




